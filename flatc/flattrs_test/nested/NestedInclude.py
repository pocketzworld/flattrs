# automatically generated by the FlatBuffers compiler, do not modify

# namespace: nested

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class NestedInclude(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = NestedInclude()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsNestedInclude(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # NestedInclude
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # NestedInclude
    def Test(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from vec3.Vec3 import Vec3
            obj = Vec3()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # NestedInclude
    def Common(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from flattrs_test.Common1 import Common1
            obj = Common1()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def NestedIncludeStart(builder): builder.StartObject(2)
def Start(builder):
    return NestedIncludeStart(builder)
def NestedIncludeAddTest(builder, test): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(test), 0)
def AddTest(builder, test):
    return NestedIncludeAddTest(builder, test)
def NestedIncludeAddCommon(builder, common): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(common), 0)
def AddCommon(builder, common):
    return NestedIncludeAddCommon(builder, common)
def NestedIncludeEnd(builder): return builder.EndObject()
def End(builder):
    return NestedIncludeEnd(builder)