# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flattrs_test

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class HasCaps(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = HasCaps()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsHasCaps(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # HasCaps
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # HasCaps
    def FieldCaps(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # HasCaps
    def FieldCapsinMiddle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # HasCaps
    def ABc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def HasCapsStart(builder): builder.StartObject(3)
def Start(builder):
    return HasCapsStart(builder)
def HasCapsAddFieldCaps(builder, fieldCaps): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(fieldCaps), 0)
def AddFieldCaps(builder, fieldCaps):
    return HasCapsAddFieldCaps(builder, fieldCaps)
def HasCapsAddFieldCapsinMiddle(builder, fieldCapsinMiddle): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(fieldCapsinMiddle), 0)
def AddFieldCapsinMiddle(builder, fieldCapsinMiddle):
    return HasCapsAddFieldCapsinMiddle(builder, fieldCapsinMiddle)
def HasCapsAddABc(builder, aBc): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(aBc), 0)
def AddABc(builder, aBc):
    return HasCapsAddABc(builder, aBc)
def HasCapsEnd(builder): return builder.EndObject()
def End(builder):
    return HasCapsEnd(builder)